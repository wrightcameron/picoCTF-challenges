from base64 import b64decode, b64encode
import requests

PICOCTF_WEBSITE = "http://mercury.picoctf.net:56136/"

# Bit flip code based on https://crypto.stackexchange.com/a/66086.
# we need to decode from base64 twice because the cookie was encoded twice.
def bit_flip(pos: int, bit: int, data: bytearray) -> str:
    data[pos] = data[pos] ^ bit
    raw = bytes(data)
    return b64encode(b64encode(raw)).decode()

# Get new auth_name cookie from picctf site
# requires a session, simple request returns no cookies
s = requests.session()
s.get(PICOCTF_WEBSITE)
authCookie = s.cookies["auth_name"]
del(s)

print(f"Using encoded cookie {authCookie}")
decodedAuth = b64decode(b64decode(authCookie))
decodedAuthArray = bytearray(decodedAuth)  # Make byte array to make it mutable

# Loop through every element in Byte array
for count, i in enumerate(decodedAuthArray):
    print(f"On byte {i}, of index {count}")
    bitFlip = 0b10000000
    # Each byte is 8 bits, start left, flipping a bit and shifting bitFlip to the right
    for j in range(8):
        newCookie = bit_flip(count, bitFlip, decodedAuthArray[:])
        bitFlip = bitFlip >> 1
        cookies = {'auth_name': newCookie}
        r = requests.get(PICOCTF_WEBSITE, cookies=cookies)
        if "picoCTF{" in r.text:
            print(r.text)
            input("Press Enter to continue...")
